{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhu73\\\\Desktop\\\\Online\\\\Hunter20-23\\\\23spring\\\\webdev\\\\projects\\\\final-project\\\\final-project-client\\\\src\\\\components\\\\containers\\\\StudentContainer.js\";\n/*==================================================\r\nStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\nimport Header from \"./Header\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStudentThunk, deleteStudentThunk, editStudentThunk } from \"../../store/thunks\";\nimport { StudentView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass StudentContainer extends Component {\n  // Get student data from back-end database\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n\n  // Render Student view by passing student data as props to the corresponding View component\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StudentView, {\n        student: this.props.student,\n        fetchStudent: this.props.fetchStudent,\n        deleteStudent: this.props.deleteStudent,\n        editStudent: this.props.editStudent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nconst mapState = state => {\n  return {\n    student: state.student // Get the State object from Reducer \"student\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    deleteStudent: studentId => dispatch(deleteStudentThunk(studentId)),\n    editStudent: id => dispatch(editStudentThunk(id))\n  };\n};\n\n// Export store-connected container by default\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store\n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(StudentContainer);","map":{"version":3,"names":["Header","React","Component","connect","fetchStudentThunk","deleteStudentThunk","editStudentThunk","StudentView","StudentContainer","componentDidMount","props","fetchStudent","match","params","id","render","student","deleteStudent","editStudent","mapState","state","mapDispatch","dispatch","studentId"],"sources":["C:/Users/jhu73/Desktop/Online/Hunter20-23/23spring/webdev/projects/final-project/final-project-client/src/components/containers/StudentContainer.js"],"sourcesContent":["/*==================================================\r\nStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport Header from \"./Header\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchStudentThunk,\r\n  deleteStudentThunk,\r\n  editStudentThunk,\r\n} from \"../../store/thunks\";\r\nimport { StudentView } from \"../views\";\r\n\r\nclass StudentContainer extends Component {\r\n  // Get student data from back-end database\r\n  componentDidMount() {\r\n    //getting student ID from url\r\n    this.props.fetchStudent(this.props.match.params.id);\r\n  }\r\n\r\n  // Render Student view by passing student data as props to the corresponding View component\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <StudentView\r\n          student={this.props.student}\r\n          fetchStudent={this.props.fetchStudent}\r\n          deleteStudent={this.props.deleteStudent}\r\n          editStudent={this.props.editStudent}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.\r\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\r\nconst mapState = (state) => {\r\n  return {\r\n    student: state.student, // Get the State object from Reducer \"student\"\r\n  };\r\n};\r\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\r\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\r\n    deleteStudent: (studentId) => dispatch(deleteStudentThunk(studentId)),\r\n    editStudent: (id) => dispatch(editStudentThunk(id)),\r\n    \r\n  };\r\n};\r\n\r\n// Export store-connected container by default\r\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store\r\n// (and re-read the values when the Store State updates).\r\nexport default connect(mapState, mapDispatch)(StudentContainer);\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SACEC,iBAAiB,EACjBC,kBAAkB,EAClBC,gBAAgB,QACX,oBAAoB;AAC3B,SAASC,WAAW,QAAQ,UAAU;AAAC;AAEvC,MAAMC,gBAAgB,SAASN,SAAS,CAAC;EACvC;EACAO,iBAAiB,GAAG;IAClB;IACA,IAAI,CAACC,KAAK,CAACC,YAAY,CAAC,IAAI,CAACD,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,EAAE,CAAC;EACrD;;EAEA;EACAC,MAAM,GAAG;IACP,oBACE;MAAA,wBACE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,WAAW;QACV,OAAO,EAAE,IAAI,CAACL,KAAK,CAACM,OAAQ;QAC5B,YAAY,EAAE,IAAI,CAACN,KAAK,CAACC,YAAa;QACtC,aAAa,EAAE,IAAI,CAACD,KAAK,CAACO,aAAc;QACxC,WAAW,EAAE,IAAI,CAACP,KAAK,CAACQ;MAAY;QAAA;QAAA;QAAA;MAAA,QACpC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAEV;AACF;;AAEA;AACA;AACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,OAAO;IACLJ,OAAO,EAAEI,KAAK,CAACJ,OAAO,CAAE;EAC1B,CAAC;AACH,CAAC;AACD;AACA;AACA,MAAMK,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAO;IACLX,YAAY,EAAGG,EAAE,IAAKQ,QAAQ,CAAClB,iBAAiB,CAACU,EAAE,CAAC,CAAC;IACrDG,aAAa,EAAGM,SAAS,IAAKD,QAAQ,CAACjB,kBAAkB,CAACkB,SAAS,CAAC,CAAC;IACrEL,WAAW,EAAGJ,EAAE,IAAKQ,QAAQ,CAAChB,gBAAgB,CAACQ,EAAE,CAAC;EAEpD,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,eAAeX,OAAO,CAACgB,QAAQ,EAAEE,WAAW,CAAC,CAACb,gBAAgB,CAAC"},"metadata":{},"sourceType":"module"}