{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhu73\\\\Desktop\\\\Online\\\\Hunter20-23\\\\23spring\\\\webdev\\\\projects\\\\final-project\\\\final-project-client\\\\src\\\\components\\\\containers\\\\CampusContainer.js\";\n/*==================================================\r\nCampusContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\nimport Header from \"./Header\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchCampusThunk, editCampusThunk, deleteCampusThunk, deleteStudentThunk } from \"../../store/thunks\";\nimport { CampusView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CampusContainer extends Component {\n  // Get the specific campus data from back-end database\n  componentDidMount() {\n    // Get campus ID from URL (API link)\n    this.props.fetchCampus(this.props.match.params.id);\n  }\n\n  // Render a Campus view by passing campus data as props to the corresponding View component\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CampusView, {\n        campus: this.props.campus,\n        deleteCampus: this.props.deleteCampus,\n        editCampus: this.props.editCampus,\n        deleteStudent: this.props.deleteStudent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\nconst mapState = state => {\n  return {\n    campus: state.campus // Get the State object from Reducer \"campus\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = dispatch => {\n  return {\n    fetchCampus: id => dispatch(fetchCampusThunk(id)),\n    editCampus: id => dispatch(editCampusThunk(id)),\n    deleteCampus: id => dispatch(deleteCampusThunk(id)),\n    deleteStudent: id => dispatch(deleteStudentThunk(id))\n  };\n};\n\n// Export store-connected container by default\n// CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store\n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(CampusContainer);","map":{"version":3,"names":["Header","React","Component","connect","fetchCampusThunk","editCampusThunk","deleteCampusThunk","deleteStudentThunk","CampusView","CampusContainer","componentDidMount","props","fetchCampus","match","params","id","render","campus","deleteCampus","editCampus","deleteStudent","mapState","state","mapDispatch","dispatch"],"sources":["C:/Users/jhu73/Desktop/Online/Hunter20-23/23spring/webdev/projects/final-project/final-project-client/src/components/containers/CampusContainer.js"],"sourcesContent":["/*==================================================\r\nCampusContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport Header from \"./Header\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchCampusThunk,\r\n  editCampusThunk,\r\n  deleteCampusThunk,\r\n  deleteStudentThunk,\r\n} from \"../../store/thunks\";\r\nimport { CampusView } from \"../views\";\r\n\r\nclass CampusContainer extends Component {\r\n  // Get the specific campus data from back-end database\r\n  componentDidMount() {\r\n    // Get campus ID from URL (API link)\r\n    this.props.fetchCampus(this.props.match.params.id);\r\n  }\r\n\r\n  // Render a Campus view by passing campus data as props to the corresponding View component\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <CampusView\r\n          campus={this.props.campus}\r\n          deleteCampus={this.props.deleteCampus}\r\n          editCampus={this.props.editCampus}\r\n          deleteStudent={this.props.deleteStudent}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\r\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\r\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\r\nconst mapState = (state) => {\r\n  return {\r\n    campus: state.campus, // Get the State object from Reducer \"campus\"\r\n  };\r\n};\r\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\r\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\r\n    editCampus: (id) => dispatch(editCampusThunk(id)),\r\n    deleteCampus: (id) => dispatch(deleteCampusThunk(id)),\r\n    deleteStudent: (id) => dispatch(deleteStudentThunk(id)),\r\n  };\r\n};\r\n\r\n// Export store-connected container by default\r\n// CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store\r\n// (and re-read the values when the Store State updates).\r\nexport default connect(mapState, mapDispatch)(CampusContainer);\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SACEC,gBAAgB,EAChBC,eAAe,EACfC,iBAAiB,EACjBC,kBAAkB,QACb,oBAAoB;AAC3B,SAASC,UAAU,QAAQ,UAAU;AAAC;AAEtC,MAAMC,eAAe,SAASP,SAAS,CAAC;EACtC;EACAQ,iBAAiB,GAAG;IAClB;IACA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,IAAI,CAACD,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,EAAE,CAAC;EACpD;;EAEA;EACAC,MAAM,GAAG;IACP,oBACE;MAAA,wBACE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,UAAU;QACT,MAAM,EAAE,IAAI,CAACL,KAAK,CAACM,MAAO;QAC1B,YAAY,EAAE,IAAI,CAACN,KAAK,CAACO,YAAa;QACtC,UAAU,EAAE,IAAI,CAACP,KAAK,CAACQ,UAAW;QAClC,aAAa,EAAE,IAAI,CAACR,KAAK,CAACS;MAAc;QAAA;QAAA;QAAA;MAAA,QACxC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAEV;AACF;;AAEA;AACA;AACA;AACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,OAAO;IACLL,MAAM,EAAEK,KAAK,CAACL,MAAM,CAAE;EACxB,CAAC;AACH,CAAC;AACD;AACA;AACA,MAAMM,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAO;IACLZ,WAAW,EAAGG,EAAE,IAAKS,QAAQ,CAACpB,gBAAgB,CAACW,EAAE,CAAC,CAAC;IACnDI,UAAU,EAAGJ,EAAE,IAAKS,QAAQ,CAACnB,eAAe,CAACU,EAAE,CAAC,CAAC;IACjDG,YAAY,EAAGH,EAAE,IAAKS,QAAQ,CAAClB,iBAAiB,CAACS,EAAE,CAAC,CAAC;IACrDK,aAAa,EAAGL,EAAE,IAAKS,QAAQ,CAACjB,kBAAkB,CAACQ,EAAE,CAAC;EACxD,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,eAAeZ,OAAO,CAACkB,QAAQ,EAAEE,WAAW,CAAC,CAACd,eAAe,CAAC"},"metadata":{},"sourceType":"module"}