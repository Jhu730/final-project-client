{"ast":null,"code":"/*==================================================\r\n/src/store/thunks.js\r\n\r\nIt contains all Thunk Creators and Thunks.\r\n================================================== */\nimport * as ac from \"./actions/actionCreators\"; // Import Action Creators (\"ac\" keyword Action Creator)\nconst axios = require(\"axios\");\n\n//All Campuses\n// THUNK CREATOR:\nexport const fetchAllCampusesThunk = () => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get \"campuses\" data from database\n    let res = await axios.get(`/api/campuses`);\n    // Call Action Creator to return Action object (type + payload with \"campuses\" data)\n    // Then dispatch the Action object to Reducer to update state\n    dispatch(ac.fetchAllCampuses(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Single Campus\n// THUNK CREATOR:\nexport const fetchCampusThunk = id => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get a student data (based on \"id\")from database\n    let res = await axios.get(`/api/campuses/${id}`);\n    dispatch(ac.fetchCampus(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// All Students\n// THUNK CREATOR:\nexport const fetchAllStudentsThunk = () => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get \"students\" data from database\n    let res = await axios.get(`/api/students`);\n    // Call Action Creator to return Action object (type + payload with \"students\" data)\n    // Then dispatch the Action object to Reducer to update state\n    dispatch(ac.fetchAllStudents(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Add Student\n// THUNK CREATOR:\nexport const addStudentThunk = student => async dispatch => {\n  // The THUNK\n  try {\n    // API \"post\" call to add \"student\" object's data to database\n    let res = await axios.post(`/api/students`, student);\n    // Call Action Creator to return Action object (type + payload with new students data)\n    // Then dispatch the Action object to Reducer to update state\n    dispatch(ac.addStudent(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Delete Student\n// THUNK CREATOR:\nexport const deleteStudentThunk = studentId => async dispatch => {\n  // The THUNK\n  try {\n    // API \"delete\" call to delete student (based on \"studentID\") from database\n    await axios.delete(`/api/students/${studentId}`);\n    // Delete successful so change state with dispatch\n    dispatch(ac.deleteStudent(studentId));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Edit Student\n// THUNK CREATOR:\nexport const editStudentThunk = student => async dispatch => {\n  // The THUNK\n  try {\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\n    let updatedStudent = await axios.put(`/api/students/${student.id}`, student);\n    // Update successful so change state with dispatch\n    dispatch(ac.editStudent(updatedStudent));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Single Student\n// THUNK CREATOR:\nexport const fetchStudentThunk = id => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get a specific student (based on \"id\") data from database\n    let res = await axios.get(`/api/students/${id}`);\n    // Call Action Creator to return Action object (type + payload with student data)\n    // Then dispatch the Action object to Reducer to display student data\n    dispatch(ac.fetchStudent(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n//edit campus\nexport const editCampusThunk = campus => async dispatch => {\n  try {\n    let updatedCampus = await axios.put(`/api/campuses/${campus.id}`, campus);\n    dispatch(ac.editCampus(updatedCampus));\n  } catch (err) {\n    console.error(err);\n  }\n};\n//add campus\nexport const addCampusThunk = campus => async dispatch => {\n  try {\n    let res = await axios.post(`/api/campuses`, campus);\n    dispatch(ac.addCampus(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n//delete campus\nexport const deleteCampusThunk = id => async dispatch => {\n  try {\n    await axios.delete(`/api/campuses/${id}`);\n    //delete succesful so change state with dispatch\n    dispatch(ac.deleteCampus(id));\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["ac","axios","require","fetchAllCampusesThunk","dispatch","res","get","fetchAllCampuses","data","err","console","error","fetchCampusThunk","id","fetchCampus","fetchAllStudentsThunk","fetchAllStudents","addStudentThunk","student","post","addStudent","deleteStudentThunk","studentId","delete","deleteStudent","editStudentThunk","updatedStudent","put","editStudent","fetchStudentThunk","fetchStudent","editCampusThunk","campus","updatedCampus","editCampus","addCampusThunk","addCampus","deleteCampusThunk","deleteCampus"],"sources":["C:/Users/jhu73/Desktop/Online/Hunter20-23/23spring/webdev/projects/final-project/final-project-client/src/store/thunks.js"],"sourcesContent":["/*==================================================\r\n/src/store/thunks.js\r\n\r\nIt contains all Thunk Creators and Thunks.\r\n================================================== */\r\nimport * as ac from \"./actions/actionCreators\"; // Import Action Creators (\"ac\" keyword Action Creator)\r\nconst axios = require(\"axios\");\r\n\r\n//All Campuses\r\n// THUNK CREATOR:\r\nexport const fetchAllCampusesThunk = () => async (dispatch) => {\r\n  // The THUNK\r\n  try {\r\n    // API \"get\" call to get \"campuses\" data from database\r\n    let res = await axios.get(`/api/campuses`);\r\n    // Call Action Creator to return Action object (type + payload with \"campuses\" data)\r\n    // Then dispatch the Action object to Reducer to update state\r\n    dispatch(ac.fetchAllCampuses(res.data));\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Single Campus\r\n// THUNK CREATOR:\r\nexport const fetchCampusThunk = (id) => async (dispatch) => {\r\n  // The THUNK\r\n  try {\r\n    // API \"get\" call to get a student data (based on \"id\")from database\r\n    let res = await axios.get(`/api/campuses/${id}`);\r\n    dispatch(ac.fetchCampus(res.data));\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// All Students\r\n// THUNK CREATOR:\r\nexport const fetchAllStudentsThunk = () => async (dispatch) => {\r\n  // The THUNK\r\n  try {\r\n    // API \"get\" call to get \"students\" data from database\r\n    let res = await axios.get(`/api/students`);\r\n    // Call Action Creator to return Action object (type + payload with \"students\" data)\r\n    // Then dispatch the Action object to Reducer to update state\r\n    dispatch(ac.fetchAllStudents(res.data));\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Add Student\r\n// THUNK CREATOR:\r\nexport const addStudentThunk = (student) => async (dispatch) => {\r\n  // The THUNK\r\n  try {\r\n    // API \"post\" call to add \"student\" object's data to database\r\n    let res = await axios.post(`/api/students`, student);\r\n    // Call Action Creator to return Action object (type + payload with new students data)\r\n    // Then dispatch the Action object to Reducer to update state\r\n    dispatch(ac.addStudent(res.data));\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Delete Student\r\n// THUNK CREATOR:\r\nexport const deleteStudentThunk = (studentId) => async (dispatch) => {\r\n  // The THUNK\r\n  try {\r\n    // API \"delete\" call to delete student (based on \"studentID\") from database\r\n    await axios.delete(`/api/students/${studentId}`);\r\n    // Delete successful so change state with dispatch\r\n    dispatch(ac.deleteStudent(studentId));\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Edit Student\r\n// THUNK CREATOR:\r\nexport const editStudentThunk = (student) => async (dispatch) => {\r\n  // The THUNK\r\n  try {\r\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\r\n    let updatedStudent = await axios.put(\r\n      `/api/students/${student.id}`,\r\n      student\r\n    );\r\n    // Update successful so change state with dispatch\r\n    dispatch(ac.editStudent(updatedStudent));\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// Single Student\r\n// THUNK CREATOR:\r\nexport const fetchStudentThunk = (id) => async (dispatch) => {\r\n  // The THUNK\r\n  try {\r\n    // API \"get\" call to get a specific student (based on \"id\") data from database\r\n    let res = await axios.get(`/api/students/${id}`);\r\n    // Call Action Creator to return Action object (type + payload with student data)\r\n    // Then dispatch the Action object to Reducer to display student data\r\n    dispatch(ac.fetchStudent(res.data));\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n//edit campus\r\nexport const editCampusThunk = (campus) => async (dispatch) => {\r\n  try {\r\n    let updatedCampus = await axios.put(`/api/campuses/${campus.id}`, campus);\r\n    dispatch(ac.editCampus(updatedCampus));\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n//add campus\r\nexport const addCampusThunk = (campus) => async (dispatch) => {\r\n  try {\r\n    let res = await axios.post(`/api/campuses`, campus);\r\n    dispatch(ac.addCampus(res.data));\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n//delete campus\r\nexport const deleteCampusThunk = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/campuses/${id}`);\r\n    //delete succesful so change state with dispatch\r\n    dispatch(ac.deleteCampus(id));\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}